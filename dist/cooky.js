!function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}var t={};r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},r.p="",r(r.s=0)}([function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n={getAll:function(){return document.cookie.split("; ").map(function(e){var r=e.split("=");if(2!=r.length)throw new Error("An error occured while parsing a cookie");return{name:r[0],value:r[1]}})},getAllAsObject:function(){return this.getAll().reduce(function(e,r){return e[r.name]=r.value,e},{})},getAllAsMap:function(){if(!Map)throw new Error("Your navigator doesn't support Map");return new Map(Object.entries(this.getAllAsObject()))},get:function(e){if("string"!=typeof e)throw new TypeError("The name of a cookie is always a String");var r=this.getAll(),t=!0,n=!1,o=void 0;try{for(var i,u=r[Symbol.iterator]();!(t=(i=u.next()).done);t=!0){var a=i.value;if(a.name===e)return a.value}}catch(e){n=!0,o=e}finally{try{!t&&u.return&&u.return()}finally{if(n)throw o}}return null},set:function(e,r){if("string"!=typeof e)throw new TypeError("A cookie's name must be a String");if("string"!=typeof r)throw new TypeError("A cookie's value must be a String");return document.cookie=e+"="+r,this},has:function(e){if("string"!=typeof e)throw new TypeError("A cookie's name is a String");return this.getAllAsObject().hasOwnProperty(e)}};!function(e){Object.freeze(e);for(var r in e)Object.freeze(e[r])}(n),r.default=n}]);